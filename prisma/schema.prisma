datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  refresh_token_expires_in Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  subs          Sub[]
  reviews       SubReview[]
  requests      Request[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Sub {
  id      String      @id @default(cuid())
  userId  String
  user    User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  request Request?
  reviews SubReview[]
  link    String      @unique
  title   String
  body    String
}

model Request {
  id    String  @id @default(cuid())
  subId String?
  sub   Sub?    @relation(fields: [subId], references: [id], onDelete: Cascade)
  users User[]
  link  String  @unique
}

model SubReview {
  id      String   @id @default(cuid())
  subId   String
  sub     Sub      @relation(fields: [subId], references: [id], onDelete: Cascade)
  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  score   Decimal?
  comment String?
}
